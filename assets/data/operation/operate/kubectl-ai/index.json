{"hash":"6b73e1bb93c34b93ff1ecefadd2f639bfcb04616","data":{"thisPage":{"id":"4397e8ca21f973309ca5c47400bb62f6","name":"Kubectl-ai","mockData":"{\"Kubectl OpenAI Plugin\":\"Multi-lateral\"}","source":"<template>\r\n    <div>\r\n        <mark-down class=\"content\">\r\n            \r\n## AI기반 YAML 자동생성&오케스트레이션\r\n\r\nKubectl-ai를 활용하여 각 서비스들의 배포 Manifest를 자동 생성하고, 배포된 컨테이너 객체에 대하여 Kubectl-gpt를 통해 오케스트레이션을 수행하는 과정은 다음과 같습니다.\r\n\r\n먼저 K8s Copliot 사용을 위해 다음과 같이 설치를 진행합니다.\r\n```\r\nbrew tap sozercan/kubectl-ai https://github.com/sozercan/kubectl-ai\r\nbrew install kubectl-ai\r\n```\r\n        </mark-down>\r\n        <mark-down class=\"content\" source=\"\r\n### Set Open-API Key & Endpoint\r\nKubectl ai를 사용하기 위해서 OPENAI API Key를 터미널에 다음과 같이 입력합니다.\r\n```\r\nexport OPENAI_API_KEY=<your-key>\r\n``` \r\n* 3.5 모델 사용시,\r\nexport OPENAI_DEPLOYMENT_NAME=gpt-3.5-turbo\t\r\n\r\n* OPENAI_ENDPOINT 에는 AI 백엔드 및 모델(e.g Azure OpenAI, LocalAI, Cohere, Amazon Bedrock. etc) 엔드 포인트를 기술합니다. \r\n* 생략 시 기본 Open AI 사용합니다.\r\nexport OPENAI_ENDPOINT=<your OpenAI endpoint, like 'https://my-aoi-endpoint.openai.azure.com' or 'http://localhost:8080/v1'> \r\n\">\r\n</mark-down>\r\n<mark-down class=\"content\">\r\n### AI를 활용한 주문서비스 자동 배포\r\n        \r\n주문서비스 배포를 위해 apexacme/order:v1 이미지를 사용하는 배포 YAML 생성을 위한 프롬프트를 다음과 같이 입력합니다.\r\n```\r\nkubectl ai \"8080포트를 사용하는 store 서비스의 복제본 3개를 생성하는 배포 스펙을 만들어 봐, 이미지는 apexacme/store:latest 사용해.\"\r\n```\r\n- 프롬프트 결과로 AI는 아래와 유사한 YAML을 생성해 보여줍니다.\r\n![image](https://github.com/acmexii/demo/assets/35618409/0155e5e3-1859-4b0e-a46a-f129adfdbe0b)\r\n\r\n- 위에서 Apply를 선택해 적용하면 배포가 실행되고 아래와 같이 조회할 수 있습니다.\r\n```\r\n$ kubectl get pod -l app=store\r\n\r\nNAME                                READY   STATUS    RESTARTS   AGE\r\nstore-deployment-7996bfbb56-4x4vd   1/1     Running   0          77s\r\nstore-deployment-7996bfbb56-8pftb   1/1     Running   0          77s\r\nstore-deployment-7996bfbb56-txzlm   1/1     Running   0          77s\r\n```\r\n\r\n#### 배포된 주문 서비스에 L4 라우터(Service)를 생성하기 위해 다음과 같이 프롬프팅을 진행합니다.\r\n```\r\nkubectl ai \"생성된 store 서비스로 라우팅하는 서비스를 생성해줘. 포트는 8080 이 좋겠어.\"\r\n```\r\n            </mark-down>\r\n            <mark-down class=\"content\" source=\"\r\n```\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: my-service\r\nspec:\r\n  selector:\r\n    app: store\r\n  ports:\r\n    - protocol: TCP\r\n      port: 8080\r\n      targetPort: 8080\r\n```\r\n            \"></mark-down>\r\n            <mark-down class=\"content\">\r\n- 서비스 이름이 my-service(혹은, 다른 이름)으로 생성되어 나왔을 경우, Reprompt를 선택하고 다음과 같이 프롬프트를 수정합니다.\r\n- \"생성된 store 서비스로 라우팅하는 서비스를 생성해줘. 포트는 8080 이고 서비스 이름도 store가 좋겠어.\"\r\n                </mark-down>\r\n                <mark-down class=\"content\" source=\"\r\n```\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: store\r\nspec:\r\n  selector:\r\n    app: store\r\n  ports:\r\n    - protocol: TCP\r\n      port: 8080\r\n      targetPort: 8080\r\n```\r\n- Apply를 선택하여 실행하고, 서비스를 조회하면 'store'로 서비스가 생성된 것을 확인할 수 있습니다.\r\n        \r\n```\r\n$ kubectl get svc\r\nstore    ClusterIP   10.36.9.223   <none>   8080/TCP   2m58s\r\n```\r\n        \"></mark-down>\r\n        <mark-down class=\"content\">\r\n\r\n### 배포된 주문서비스 AI로 오케스트레이션\r\n\r\nkubectl-ai로 배포된 서비스에 대해, 오케스트레이션에 특화된 kubectl-gpt를 사용해 자연어 기반으로 관리 할 수 있습니다.\r\n\r\n### Installation\r\n\r\n'Kubectl-gpt' OpenAPI를 다음과 같은 명령어로 설치합니다.\r\n```\r\n# Install Homebrew: https://brew.sh/\r\nbrew tap devinjeon/kubectl-gpt https://github.com/devinjeon/kubectl-gpt\r\nbrew install kubectl-gpt\r\n```\r\n- API Key는 위에서 설정한 Key를 재사용하기 때문에 다시 설정하지 않아도 됩니다.\r\n\r\n- 주문서비스 개수 확인하기\r\n```\r\nkubectl gpt \"현재 실행중인 store 서비스 Pod 개수 알려줘.\"\r\n```\r\n\r\n- kubectl-gpt는 프롬프트를 분석하여 다음의 Kubectl command를 생성하고 확인을 기다리는 방식으로 동작합니다.\r\n```\r\n$ kubectl gpt \"현재 store 서비스 Pod 개수 알려줘.\"\r\n❗[WARNING] Please verify the generated commands before executing them on your k8s cluster, especially `update` and `patch` commands, as GPT-generated commands may be inaccurate.\r\n[Generated Command]\r\nkubectl get pods -l app=store\r\n⎈ Do you really want to execute this command? [y/N]: y\r\n```\r\n\r\n#### 서비스 Scale In-Out\r\n```\r\nkubectl gpt \"store 서비스의 복제본 개수를 1개로 설정해 줘.\"\r\n```\r\n\r\n```\r\n$ kubectl gpt \"store 서비스의 복제본 개수를 1개로 설정해 줘.\"\r\n❗[WARNING] Please verify the generated commands before executing them on your k8s cluster, especially `update` and `patch` commands, as GPT-generated commands may be inaccurate.\r\n[Generated Command]\r\nkubectl scale deployment store --replicas=1\r\n⎈ Do you really want to execute this command? [y/N]:\r\n```\r\n- 'y'눌러 주문서비스의 인스턴스가 1개로 스케일 인 됨을 확인 할 수 있습니다.\r\n\r\n#### CPU 사용율에 따라 동적으로 상점서비스가 Auto Scale-out 되는 커맨드를 요청하겠습니다.\r\n```\r\nkubectl gpt \"배포된 store 서비스 명을 찾아서 CPU 기반 평균 30%이상 점유했을 때, 10개 까지 자동 확장하도록 설정해 줘. 배포 이름은 store-deployment 이야.\"\r\n```\r\n- 'y'를 눌러 적용한 다음, 확인하기 위해 다음과 같이 프롬프팅을 진행합니다.\r\n\r\n```\r\nkubectl gpt \"store 서비스에 적용된 HPA 설정이 있으면 확인해서 알려줘.\"\r\n```\r\n- 프롬프트의 결과로 HPA설정이 적용된 store 서비스를 나타내는 것을 확인할 수 있습니다. \r\n        </mark-down>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    // @group 01_04_03\r\n    export default {\r\n        name:'Kubectl-ai',\r\n        data() {\r\n            return {}\r\n        },\r\n        props: {\r\n            \"Kubectl OpenAI Plugin\": {\r\n                type: String\r\n            },\r\n        },\r\n    }\r\n</script>","path":"/operation/operate/kubectl-ai/","props":[{"name":"Kubectl OpenAI Plugin"}],"componentDesc":{"group":["01_04_03"]},"fileInfo":{"name":"Kubectl-ai","path":"operation/operate/Kubectl-ai.vue","directory":"operation/operate"}},"allPagesByName":{"edges":[{"node":{"id":"42a785c750fee77c12bd370a33da8092","name":"index","path":"/llm/llm/","props":[{"name":"설치형 LLM"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"llm/llm/index.vue","directory":"llm/llm"}}},{"node":{"id":"5d90dd3369652db074abbfe45c92a79c","name":"index","path":"/operation/implement/","props":[{"name":"구현"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/implement/index.vue","directory":"operation/implement"}}},{"node":{"id":"296398f382963f74036f9b5dcc745e91","name":"index","path":"/operation/course/","props":[{"name":"교육과정 소개"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/course/index.vue","directory":"operation/course"}}},{"node":{"id":"986c6ca74c7baaaf54586af6a3448b62","name":"index","path":"/operation/introduction/","props":[{"name":"AI 코딩 도구"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/introduction/index.vue","directory":"operation/introduction"}}},{"node":{"id":"98ae4b6ad6456be10dc0ab3c6ff225cc","name":"index","path":"/operation/planning/","props":[{"name":"분석/설계"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/planning/index.vue","directory":"operation/planning"}}},{"node":{"id":"be7d06ff70ab0f0462f29187d8d8114b","name":"index","path":"/operation/llm-msaez/","props":[{"name":"Overview"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/llm-msaez/index.vue","directory":"operation/llm-msaez"}}},{"node":{"id":"8a68cd853c37a94b079386a11b37aa99","name":"index","path":"/operation/operate/","props":[{"name":"배포/운영"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/operate/index.vue","directory":"operation/operate"}}},{"node":{"id":"c11b5e3dc39abb5b06d5e9b7b27aa48a","name":"IDE","path":"/operation/introduction/ide/","props":[{"name":"Cursor IDE"}],"componentDesc":{"group":["01_01_02"]},"fileInfo":{"name":"IDE","path":"operation/introduction/IDE.vue","directory":"operation/introduction"}}},{"node":{"id":"81e96c049536a8c886ef18cecb45cd81","name":"SW","path":"/operation/introduction/sw/","props":[{"name":"┗ 테스트생성과 리팩토링"}],"componentDesc":{"group":["01_01_03"]},"fileInfo":{"name":"SW","path":"operation/introduction/SW.vue","directory":"operation/introduction"}}},{"node":{"id":"253266c5ed8852c96bc2dc2f599df41c","name":"Legacy","path":"/operation/introduction/legacy/","props":[{"name":"┗ 레거시분석과 모더나이징"}],"componentDesc":{"group":["01_01_04"]},"fileInfo":{"name":"Legacy","path":"operation/introduction/Legacy.vue","directory":"operation/introduction"}}},{"node":{"id":"8e7686d22cea4cd36416b65951e5fd53","name":"GPT-Engineer","path":"/operation/introduction/gpt-engineer/","props":[{"name":"GPT-Engineer"}],"componentDesc":{"group":["01_01_05"]},"fileInfo":{"name":"Gpt-engineer","path":"operation/introduction/Gpt-engineer.vue","directory":"operation/introduction"}}},{"node":{"id":"77072554ab3777a8fb3b06f9fcbdd775","name":"Continue","path":"/operation/introduction/continue/","props":[{"name":"Continue 코파일럿"}],"componentDesc":{"group":["01_01_06"]},"fileInfo":{"name":"Continue","path":"operation/introduction/Continue.vue","directory":"operation/introduction"}}},{"node":{"id":"64f93e5b45b1005f807e2c09495949fe","name":"Kubernetes","path":"/operation/introduction/kubectl-ai/","props":[{"name":"쿠버네티스 AI 플러그인"}],"componentDesc":{"group":["01_01_07"]},"fileInfo":{"name":"Kubectl-AI","path":"operation/introduction/Kubectl-AI.vue","directory":"operation/introduction"}}},{"node":{"id":"1c8e15a562e81e7c608fc5c04e215c69","name":"GPT-Engineer-dev","path":"/operation/implement/gpt-engineer-dev/","props":[{"name":"MSA Chassis by Autopilot"}],"componentDesc":{"group":["01_03_02"]},"fileInfo":{"name":"GPT-Engineer-dev","path":"operation/implement/GPT-Engineer-dev.vue","directory":"operation/implement"}}},{"node":{"id":"45bb74a431bc74bebf8b1ee32eef9e8b","name":"Copilot-dev","path":"/operation/implement/copilot-dev/","props":[{"name":"Business Logic by Copilot"}],"componentDesc":{"group":["01_03_03"]},"fileInfo":{"name":"Copilot-dev","path":"operation/implement/Copilot-dev.vue","directory":"operation/implement"}}},{"node":{"id":"7b93fc4038b827dada41c4dfc9a03c47","name":"Fastfood","path":"/operation/operate/copilot-dockerising/","props":[{"name":"Github Action 활용"}],"componentDesc":{"group":["01_04_02"]},"fileInfo":{"name":"Copilot-dockerising","path":"operation/operate/Copilot-dockerising.vue","directory":"operation/operate"}}},{"node":{"id":"4397e8ca21f973309ca5c47400bb62f6","name":"Kubectl-ai","path":"/operation/operate/kubectl-ai/","props":[{"name":"Kubectl OpenAI Plugin"}],"componentDesc":{"group":["01_04_03"]},"fileInfo":{"name":"Kubectl-ai","path":"operation/operate/Kubectl-ai.vue","directory":"operation/operate"}}},{"node":{"id":"1bc6e9edd49039c5b6582aff860d11fd","name":"Ai-ops-trouble-shooting","path":"/operation/operate/ai-ops-trouble-shooting/","props":[{"name":"Kubernetes Trouble shooting"}],"componentDesc":{"group":["01_04_04"]},"fileInfo":{"name":"Ai-ops-trouble-shooting","path":"operation/operate/Ai-ops-trouble-shooting.vue","directory":"operation/operate"}}},{"node":{"id":"ab9b4ae17d0be1d1ab1ffab705b40e6a","name":"AutoModeling","path":"/operation/planning/ai-auto-modeling/","props":[{"name":"AI-driven MSA 디자인"}],"componentDesc":{"group":["02_01_02"]},"fileInfo":{"name":"Ai-auto-modeling","path":"operation/planning/Ai-auto-modeling.vue","directory":"operation/planning"}}},{"node":{"id":"6d286e2e7109a1e4ca79e85d2160f019","name":"LLM-Model","path":"/llm/llm/llm-model/","props":[{"name":"Open Source LLM"}],"componentDesc":{"group":["05_01_02"]},"fileInfo":{"name":"LLM-model","path":"llm/llm/LLM-model.vue","directory":"llm/llm"}}},{"node":{"id":"2b1f504f43242783333fe6a589120ea1","name":"LLM-Setting","path":"/llm/llm/llm-setting/","props":[{"name":"설치형 LLM 개발 환경 구성"}],"componentDesc":{"group":["05_01_03"]},"fileInfo":{"name":"LLM-setting","path":"llm/llm/LLM-setting.vue","directory":"llm/llm"}}},{"node":{"id":"c6b8741db4919538e12c0d43ace8a123","name":"Ollama","path":"/llm/llm/ollama/","props":[{"name":"Ollama"}],"componentDesc":{"group":["05_01_04"]},"fileInfo":{"name":"ollama","path":"llm/llm/ollama.vue","directory":"llm/llm"}}},{"node":{"id":"59328fbc1fccb0281b638b1e7c807324","name":"Open-Web","path":"/llm/llm/open-web-ui/","props":[{"name":"Open Web UI"}],"componentDesc":{"group":["05_01_05"]},"fileInfo":{"name":"open-web-ui","path":"llm/llm/open-web-ui.vue","directory":"llm/llm"}}},{"node":{"id":"0d5fa973d42ab6a4abfc56a0b18e3789","name":"Overview","path":"/operation/llm-msaez/overview/","props":[{"name":"과정개요"}],"componentDesc":{"group":["06_01_02"]},"fileInfo":{"name":"Overview","path":"operation/llm-msaez/Overview.vue","directory":"operation/llm-msaez"}}}]},"allPages":{"edges":[{"node":{"name":"index","path":"/operation/operate/","fileInfo":{"name":"index","directory":"operation/operate"}}},{"node":{"name":"AutoModeling","path":"/operation/planning/ai-auto-modeling/","fileInfo":{"name":"Ai-auto-modeling","directory":"operation/planning"}}},{"node":{"name":"Fastfood","path":"/operation/operate/copilot-dockerising/","fileInfo":{"name":"Copilot-dockerising","directory":"operation/operate"}}},{"node":{"name":"Overview","path":"/operation/llm-msaez/overview/","fileInfo":{"name":"Overview","directory":"operation/llm-msaez"}}},{"node":{"name":"Kubectl-ai","path":"/operation/operate/kubectl-ai/","fileInfo":{"name":"Kubectl-ai","directory":"operation/operate"}}},{"node":{"name":"index","path":"/operation/llm-msaez/","fileInfo":{"name":"index","directory":"operation/llm-msaez"}}},{"node":{"name":"index","path":"/operation/planning/","fileInfo":{"name":"index","directory":"operation/planning"}}},{"node":{"name":"Legacy","path":"/operation/introduction/legacy/","fileInfo":{"name":"Legacy","directory":"operation/introduction"}}},{"node":{"name":"Ai-ops-trouble-shooting","path":"/operation/operate/ai-ops-trouble-shooting/","fileInfo":{"name":"Ai-ops-trouble-shooting","directory":"operation/operate"}}},{"node":{"name":"SW","path":"/operation/introduction/sw/","fileInfo":{"name":"SW","directory":"operation/introduction"}}},{"node":{"name":"Continue","path":"/operation/introduction/continue/","fileInfo":{"name":"Continue","directory":"operation/introduction"}}},{"node":{"name":"IDE","path":"/operation/introduction/ide/","fileInfo":{"name":"IDE","directory":"operation/introduction"}}},{"node":{"name":"GPT-Engineer","path":"/operation/introduction/gpt-engineer/","fileInfo":{"name":"Gpt-engineer","directory":"operation/introduction"}}},{"node":{"name":"Copilot-dev","path":"/operation/implement/copilot-dev/","fileInfo":{"name":"Copilot-dev","directory":"operation/implement"}}},{"node":{"name":"Kubernetes","path":"/operation/introduction/kubectl-ai/","fileInfo":{"name":"Kubectl-AI","directory":"operation/introduction"}}},{"node":{"name":"index","path":"/operation/introduction/","fileInfo":{"name":"index","directory":"operation/introduction"}}},{"node":{"name":"index","path":"/operation/course/","fileInfo":{"name":"index","directory":"operation/course"}}},{"node":{"name":"index","path":"/operation/implement/","fileInfo":{"name":"index","directory":"operation/implement"}}},{"node":{"name":"GPT-Engineer-dev","path":"/operation/implement/gpt-engineer-dev/","fileInfo":{"name":"GPT-Engineer-dev","directory":"operation/implement"}}},{"node":{"name":"LLM-Model","path":"/llm/llm/llm-model/","fileInfo":{"name":"LLM-model","directory":"llm/llm"}}},{"node":{"name":"Open-Web","path":"/llm/llm/open-web-ui/","fileInfo":{"name":"open-web-ui","directory":"llm/llm"}}},{"node":{"name":"Ollama","path":"/llm/llm/ollama/","fileInfo":{"name":"ollama","directory":"llm/llm"}}},{"node":{"name":"index","path":"/llm/llm/","fileInfo":{"name":"index","directory":"llm/llm"}}},{"node":{"name":"LLM-Setting","path":"/llm/llm/llm-setting/","fileInfo":{"name":"LLM-setting","directory":"llm/llm"}}}]}},"context":{"pathRegexp":"^$path.+$"}}