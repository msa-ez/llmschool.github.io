{"hash":"f22f72dbfd282bf17cc022af29a7f15a27f0c94e","data":{"thisPage":{"id":"ac0be07f9c57dce30509a7d323a406e6","name":"Kubectl-ai","mockData":"{\"Kubectl OpenAI Plugin\":\"e-business\"}","source":"<template>\n    <div>\n        <mark-down class=\"content\">\n            \n## AI기반 YAML 자동생성&오케스트레이션\n\nKubectl-ai를 활용하여 각 서비스들의 배포 Manifest를 자동 생성하고, 배포된 컨테이너 객체에 대하여 Kubectl-gpt를 통해 오케스트레이션을 수행하는 과정은 다음과 같습니다.\n\n먼저 K8s Copliot 사용을 위해 다음과 같이 설치를 진행합니다.\n```\nbrew tap sozercan/kubectl-ai https://github.com/sozercan/kubectl-ai\nbrew install kubectl-ai\n```\n        </mark-down>\n        <mark-down class=\"content\" source=\"\n### Set Open-API Key & Endpoint\nKubectl ai를 사용하기 위해서 OPENAI API Key를 터미널에 다음과 같이 입력합니다.\n```\nexport OPENAI_API_KEY=<your-key>\n``` \n* 3.5 모델 사용시,\nexport OPENAI_DEPLOYMENT_NAME=gpt-3.5-turbo\t\n\n* OPENAI_ENDPOINT 에는 AI 백엔드 및 모델(e.g Azure OpenAI, LocalAI, Cohere, Amazon Bedrock. etc) 엔드 포인트를 기술합니다. \n* 생략 시 기본 Open AI 사용합니다.\nexport OPENAI_ENDPOINT=<your OpenAI endpoint, like 'https://my-aoi-endpoint.openai.azure.com' or 'http://localhost:8080/v1'> \n\">\n</mark-down>\n<mark-down class=\"content\">\n### AI를 활용한 주문서비스 자동 배포\n        \n주문서비스 배포를 위해 apexacme/order:v1 이미지를 사용하는 배포 YAML 생성을 위한 프롬프트를 다음과 같이 입력합니다.\n```\nkubectl ai \"8080포트를 사용하는 store 서비스의 복제본 3개를 생성하는 배포 스펙을 만들어 봐, 이미지는 apexacme/store:latest 사용해.\"\n```\n- 프롬프트 결과로 AI는 아래와 유사한 YAML을 생성해 보여줍니다.\n![image](https://github.com/acmexii/demo/assets/35618409/0155e5e3-1859-4b0e-a46a-f129adfdbe0b)\n\n- 위에서 Apply를 선택해 적용하면 배포가 실행되고 아래와 같이 조회할 수 있습니다.\n```\n$ kubectl get pod -l app=store\n\nNAME                                READY   STATUS    RESTARTS   AGE\nstore-deployment-7996bfbb56-4x4vd   1/1     Running   0          77s\nstore-deployment-7996bfbb56-8pftb   1/1     Running   0          77s\nstore-deployment-7996bfbb56-txzlm   1/1     Running   0          77s\n```\n\n#### 배포된 주문 서비스에 L4 라우터(Service)를 생성하기 위해 다음과 같이 프롬프팅을 진행합니다.\n```\nkubectl ai \"생성된 store 서비스로 라우팅하는 서비스를 생성해줘. 포트는 8080 이 좋겠어.\"\n```\n            </mark-down>\n            <mark-down class=\"content\" source=\"\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  selector:\n    app: store\n  ports:\n    - protocol: TCP\n      port: 8080\n      targetPort: 8080\n```\n            \"></mark-down>\n            <mark-down class=\"content\">\n- 서비스 이름이 my-service(혹은, 다른 이름)으로 생성되어 나왔을 경우, Reprompt를 선택하고 다음과 같이 프롬프트를 수정합니다.\n- \"생성된 store 서비스로 라우팅하는 서비스를 생성해줘. 포트는 8080 이고 서비스 이름도 store가 좋겠어.\"\n                </mark-down>\n                <mark-down class=\"content\" source=\"\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: store\nspec:\n  selector:\n    app: store\n  ports:\n    - protocol: TCP\n      port: 8080\n      targetPort: 8080\n```\n- Apply를 선택하여 실행하고, 서비스를 조회하면 'store'로 서비스가 생성된 것을 확인할 수 있습니다.\n        \n```\n$ kubectl get svc\nstore    ClusterIP   10.36.9.223   <none>   8080/TCP   2m58s\n```\n        \"></mark-down>\n        <mark-down class=\"content\">\n\n### 배포된 주문서비스 AI로 오케스트레이션\n\nkubectl-ai로 배포된 서비스에 대해, 오케스트레이션에 특화된 kubectl-gpt를 사용해 자연어 기반으로 관리 할 수 있습니다.\n\n### Installation\n\n'Kubectl-gpt' OpenAPI를 다음과 같은 명령어로 설치합니다.\n```\n# Install Homebrew: https://brew.sh/\nbrew tap devinjeon/kubectl-gpt https://github.com/devinjeon/kubectl-gpt\nbrew install kubectl-gpt\n```\n- API Key는 위에서 설정한 Key를 재사용하기 때문에 다시 설정하지 않아도 됩니다.\n\n- 주문서비스 개수 확인하기\n```\nkubectl gpt \"현재 실행중인 store 서비스 Pod 개수 알려줘.\"\n```\n\n- kubectl-gpt는 프롬프트를 분석하여 다음의 Kubectl command를 생성하고 확인을 기다리는 방식으로 동작합니다.\n```\n$ kubectl gpt \"현재 store 서비스 Pod 개수 알려줘.\"\n❗[WARNING] Please verify the generated commands before executing them on your k8s cluster, especially `update` and `patch` commands, as GPT-generated commands may be inaccurate.\n[Generated Command]\nkubectl get pods -l app=store\n⎈ Do you really want to execute this command? [y/N]: y\n```\n\n#### 서비스 Scale In-Out\n```\nkubectl gpt \"store 서비스의 복제본 개수를 1개로 설정해 줘.\"\n```\n\n```\n$ kubectl gpt \"store 서비스의 복제본 개수를 1개로 설정해 줘.\"\n❗[WARNING] Please verify the generated commands before executing them on your k8s cluster, especially `update` and `patch` commands, as GPT-generated commands may be inaccurate.\n[Generated Command]\nkubectl scale deployment store --replicas=1\n⎈ Do you really want to execute this command? [y/N]:\n```\n- 'y'눌러 주문서비스의 인스턴스가 1개로 스케일 인 됨을 확인 할 수 있습니다.\n\n#### CPU 사용율에 따라 동적으로 상점서비스가 Auto Scale-out 되는 커맨드를 요청하겠습니다.\n```\nkubectl gpt \"배포된 store 서비스 명을 찾아서 CPU 기반 평균 30%이상 점유했을 때, 10개 까지 자동 확장하도록 설정해 줘. 배포 이름은 store-deployment 이야.\"\n```\n- 'y'를 눌러 적용한 다음, 확인하기 위해 다음과 같이 프롬프팅을 진행합니다.\n\n```\nkubectl gpt \"store 서비스에 적용된 HPA 설정이 있으면 확인해서 알려줘.\"\n```\n- 프롬프트의 결과로 HPA설정이 적용된 store 서비스를 나타내는 것을 확인할 수 있습니다. \n        </mark-down>\n\n    </div>\n</template>\n\n\n<script>\n    // @group 01_04_03\n    export default {\n        name:'Kubectl-ai',\n        data() {\n            return {}\n        },\n        props: {\n            \"Kubectl OpenAI Plugin\": {\n                type: String\n            },\n        },\n    }\n</script>","path":"/operation/operate/kubectl-ai/","props":[{"name":"Kubectl OpenAI Plugin"}],"componentDesc":{"group":["01_04_03"]},"fileInfo":{"name":"Kubectl-ai","path":"operation/operate/Kubectl-ai.vue","directory":"operation/operate"}},"allPagesByName":{"edges":[{"node":{"id":"521ea353b5b2ec2c3e0f9f5be3a13039","name":"index","path":"/llm/llm/","props":[{"name":"설치형 LLM"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"llm/llm/index.vue","directory":"llm/llm"}}},{"node":{"id":"491a019883e24d1ade45318efd39fa7e","name":"index","path":"/operation/course/","props":[{"name":"교육과정 소개"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/course/index.vue","directory":"operation/course"}}},{"node":{"id":"455485b89fc07a2011135c71b3e5b06d","name":"index","path":"/operation/introduction/","props":[{"name":"AI 코딩 도구"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/introduction/index.vue","directory":"operation/introduction"}}},{"node":{"id":"ddac7512ff1cb42577161679388846a0","name":"index","path":"/operation/implement/","props":[{"name":"구현"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/implement/index.vue","directory":"operation/implement"}}},{"node":{"id":"dfe15286a0af9af4cf957c89714797f4","name":"index","path":"/operation/llm-msaez/","props":[{"name":"Overview"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/llm-msaez/index.vue","directory":"operation/llm-msaez"}}},{"node":{"id":"0bb6a8c5fa0e1266e2ccecc243fa5470","name":"index","path":"/operation/operate/","props":[{"name":"배포/운영"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/operate/index.vue","directory":"operation/operate"}}},{"node":{"id":"eeaab9630dc4711635747aa9fda862d7","name":"index","path":"/operation/planning/","props":[{"name":"분석/설계"}],"componentDesc":{"group":[]},"fileInfo":{"name":"index","path":"operation/planning/index.vue","directory":"operation/planning"}}},{"node":{"id":"ca5edeb926047bc16e52379ccb4cdbd6","name":"IDE","path":"/operation/introduction/ide/","props":[{"name":"Cursor IDE"}],"componentDesc":{"group":["01_01_02"]},"fileInfo":{"name":"IDE","path":"operation/introduction/IDE.vue","directory":"operation/introduction"}}},{"node":{"id":"b226ba8089a5b8e4cc79a46bdf60d587","name":"SW","path":"/operation/introduction/sw/","props":[{"name":"테스트생성과 패턴적용"}],"componentDesc":{"group":["01_01_03"]},"fileInfo":{"name":"SW","path":"operation/introduction/SW.vue","directory":"operation/introduction"}}},{"node":{"id":"ef65af528625f3df4341f189681a2066","name":"Legacy","path":"/operation/introduction/legacy/","props":[{"name":"레거시 분석과 전환"}],"componentDesc":{"group":["01_01_04"]},"fileInfo":{"name":"Legacy","path":"operation/introduction/Legacy.vue","directory":"operation/introduction"}}},{"node":{"id":"d894f03fb84bd2357e5f6115f61b2cd9","name":"GPT-Engineer","path":"/operation/introduction/gpt-engineer/","props":[{"name":"GPT-Engineer"}],"componentDesc":{"group":["01_01_05"]},"fileInfo":{"name":"Gpt-engineer","path":"operation/introduction/Gpt-engineer.vue","directory":"operation/introduction"}}},{"node":{"id":"7e9f91dcd66fc903b29ed35c1bdb3953","name":"Continue","path":"/operation/introduction/continue/","props":[{"name":"Continue 코파일럿"}],"componentDesc":{"group":["01_01_06"]},"fileInfo":{"name":"Continue","path":"operation/introduction/Continue.vue","directory":"operation/introduction"}}},{"node":{"id":"8436578d14e4c980d7c1ee8fa899962a","name":"Kubernetes","path":"/operation/introduction/kubectl-ai/","props":[{"name":"쿠버네티스 AI 플러그인"}],"componentDesc":{"group":["01_01_07"]},"fileInfo":{"name":"Kubectl-AI","path":"operation/introduction/Kubectl-AI.vue","directory":"operation/introduction"}}},{"node":{"id":"3bd2f88491ffe8e5d3e0cb8f5ad49c5e","name":"GPT-Engineer-dev","path":"/operation/implement/gpt-engineer-dev/","props":[{"name":"MSA Chassis by Autopilot"}],"componentDesc":{"group":["01_03_02"]},"fileInfo":{"name":"GPT-Engineer-dev","path":"operation/implement/GPT-Engineer-dev.vue","directory":"operation/implement"}}},{"node":{"id":"bec8e6134b4833a31df0a230c20b0464","name":"Copilot-dev","path":"/operation/implement/copilot-dev/","props":[{"name":"Business Logic by Copilot"}],"componentDesc":{"group":["01_03_03"]},"fileInfo":{"name":"Copilot-dev","path":"operation/implement/Copilot-dev.vue","directory":"operation/implement"}}},{"node":{"id":"c6aafe599a891c74b0fb229795490cdd","name":"Fastfood","path":"/operation/operate/copilot-dockerising/","props":[{"name":"Github Action 활용"}],"componentDesc":{"group":["01_04_02"]},"fileInfo":{"name":"Copilot-dockerising","path":"operation/operate/Copilot-dockerising.vue","directory":"operation/operate"}}},{"node":{"id":"ac0be07f9c57dce30509a7d323a406e6","name":"Kubectl-ai","path":"/operation/operate/kubectl-ai/","props":[{"name":"Kubectl OpenAI Plugin"}],"componentDesc":{"group":["01_04_03"]},"fileInfo":{"name":"Kubectl-ai","path":"operation/operate/Kubectl-ai.vue","directory":"operation/operate"}}},{"node":{"id":"f3d7168080d3c0d2ee96cd83a9434c8c","name":"Ai-ops-trouble-shooting","path":"/operation/operate/ai-ops-trouble-shooting/","props":[{"name":"Kubernetes Trouble shooting"}],"componentDesc":{"group":["01_04_04"]},"fileInfo":{"name":"Ai-ops-trouble-shooting","path":"operation/operate/Ai-ops-trouble-shooting.vue","directory":"operation/operate"}}},{"node":{"id":"8de86484c2e4943142d33cb5568bad99","name":"AutoModeling","path":"/operation/planning/ai-auto-modeling/","props":[{"name":"AI-driven MSA 디자인"}],"componentDesc":{"group":["02_01_02"]},"fileInfo":{"name":"Ai-auto-modeling","path":"operation/planning/Ai-auto-modeling.vue","directory":"operation/planning"}}},{"node":{"id":"f20ca5519dcdfdfd2a9b75f166de4303","name":"LLM-Model","path":"/llm/llm/llm-model/","props":[{"name":"Open Source LLM"}],"componentDesc":{"group":["05_01_02"]},"fileInfo":{"name":"LLM-model","path":"llm/llm/LLM-model.vue","directory":"llm/llm"}}},{"node":{"id":"32fb961852082ac931ed4dfc51178da6","name":"LLM-Setting","path":"/llm/llm/llm-setting/","props":[{"name":"설치형 LLM 개발 환경 구성"}],"componentDesc":{"group":["05_01_03"]},"fileInfo":{"name":"LLM-setting","path":"llm/llm/LLM-setting.vue","directory":"llm/llm"}}},{"node":{"id":"480ae649e5360217a72b11cabcefb6dc","name":"Ollama","path":"/llm/llm/ollama/","props":[{"name":"Ollama"}],"componentDesc":{"group":["05_01_04"]},"fileInfo":{"name":"ollama","path":"llm/llm/ollama.vue","directory":"llm/llm"}}},{"node":{"id":"52c918cf6bf34c4bdf3b4235e65147d4","name":"Open-Web","path":"/llm/llm/open-web-ui/","props":[{"name":"Open Web UI"}],"componentDesc":{"group":["05_01_05"]},"fileInfo":{"name":"open-web-ui","path":"llm/llm/open-web-ui.vue","directory":"llm/llm"}}},{"node":{"id":"388fff31369b007c6efc46b2e289576e","name":"Overview","path":"/operation/llm-msaez/overview/","props":[{"name":"과정개요"}],"componentDesc":{"group":["06_01_02"]},"fileInfo":{"name":"Overview","path":"operation/llm-msaez/Overview.vue","directory":"operation/llm-msaez"}}}]},"allPages":{"edges":[{"node":{"name":"AutoModeling","path":"/operation/planning/ai-auto-modeling/","fileInfo":{"name":"Ai-auto-modeling","directory":"operation/planning"}}},{"node":{"name":"index","path":"/operation/planning/","fileInfo":{"name":"index","directory":"operation/planning"}}},{"node":{"name":"index","path":"/operation/operate/","fileInfo":{"name":"index","directory":"operation/operate"}}},{"node":{"name":"Kubectl-ai","path":"/operation/operate/kubectl-ai/","fileInfo":{"name":"Kubectl-ai","directory":"operation/operate"}}},{"node":{"name":"Fastfood","path":"/operation/operate/copilot-dockerising/","fileInfo":{"name":"Copilot-dockerising","directory":"operation/operate"}}},{"node":{"name":"Ai-ops-trouble-shooting","path":"/operation/operate/ai-ops-trouble-shooting/","fileInfo":{"name":"Ai-ops-trouble-shooting","directory":"operation/operate"}}},{"node":{"name":"index","path":"/operation/llm-msaez/","fileInfo":{"name":"index","directory":"operation/llm-msaez"}}},{"node":{"name":"Overview","path":"/operation/llm-msaez/overview/","fileInfo":{"name":"Overview","directory":"operation/llm-msaez"}}},{"node":{"name":"index","path":"/operation/implement/","fileInfo":{"name":"index","directory":"operation/implement"}}},{"node":{"name":"Copilot-dev","path":"/operation/implement/copilot-dev/","fileInfo":{"name":"Copilot-dev","directory":"operation/implement"}}},{"node":{"name":"GPT-Engineer-dev","path":"/operation/implement/gpt-engineer-dev/","fileInfo":{"name":"GPT-Engineer-dev","directory":"operation/implement"}}},{"node":{"name":"index","path":"/operation/introduction/","fileInfo":{"name":"index","directory":"operation/introduction"}}},{"node":{"name":"SW","path":"/operation/introduction/sw/","fileInfo":{"name":"SW","directory":"operation/introduction"}}},{"node":{"name":"Legacy","path":"/operation/introduction/legacy/","fileInfo":{"name":"Legacy","directory":"operation/introduction"}}},{"node":{"name":"Kubernetes","path":"/operation/introduction/kubectl-ai/","fileInfo":{"name":"Kubectl-AI","directory":"operation/introduction"}}},{"node":{"name":"IDE","path":"/operation/introduction/ide/","fileInfo":{"name":"IDE","directory":"operation/introduction"}}},{"node":{"name":"GPT-Engineer","path":"/operation/introduction/gpt-engineer/","fileInfo":{"name":"Gpt-engineer","directory":"operation/introduction"}}},{"node":{"name":"Continue","path":"/operation/introduction/continue/","fileInfo":{"name":"Continue","directory":"operation/introduction"}}},{"node":{"name":"index","path":"/operation/course/","fileInfo":{"name":"index","directory":"operation/course"}}},{"node":{"name":"index","path":"/llm/llm/","fileInfo":{"name":"index","directory":"llm/llm"}}},{"node":{"name":"Open-Web","path":"/llm/llm/open-web-ui/","fileInfo":{"name":"open-web-ui","directory":"llm/llm"}}},{"node":{"name":"Ollama","path":"/llm/llm/ollama/","fileInfo":{"name":"ollama","directory":"llm/llm"}}},{"node":{"name":"LLM-Setting","path":"/llm/llm/llm-setting/","fileInfo":{"name":"LLM-setting","directory":"llm/llm"}}},{"node":{"name":"LLM-Model","path":"/llm/llm/llm-model/","fileInfo":{"name":"LLM-model","directory":"llm/llm"}}}]}},"context":{"pathRegexp":"^$path.+$"}}